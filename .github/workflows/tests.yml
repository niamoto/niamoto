name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gdal-bin libgdal-dev libproj-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        # Crée l'environnement virtuel via uv
        uv venv
        # Installe tes dépendances *dans* l'env virtuel uv
        uv pip install -e ".[dev]"

    - name: Run Ruff
      run: |
        uv run ruff check .

#    - name: Run MyPy
#      run: |
#        uv run mypy src/niamoto

    - name: Run Tests
      run: |
        uv run pytest --cov=niamoto tests/ --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: niamoto/niamoto
        fail_ci_if_error: true

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
        if-no-files-found: error
